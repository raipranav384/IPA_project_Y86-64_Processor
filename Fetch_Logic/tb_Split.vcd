$date
	Fri Feb 11 17:24:02 2022
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module tb_Split $end
$var wire 64 ! valC [63:0] $end
$var wire 4 " rB [3:0] $end
$var wire 4 # rA [3:0] $end
$var wire 1 $ need_valC $end
$var wire 1 % need_regids $end
$var wire 4 & ifun [3:0] $end
$var wire 4 ' icode [3:0] $end
$var wire 1 ( Instr_valid $end
$var reg 80 ) Byte [79:0] $end
$scope module uut $end
$var wire 72 * Byte19 [71:0] $end
$var wire 1 % need_regids $end
$var reg 4 + rA [3:0] $end
$var reg 4 , rB [3:0] $end
$var reg 64 - valC [63:0] $end
$upscope $end
$scope module uut1 $end
$var wire 1 ( Instr_valid $end
$var wire 1 . ic0 $end
$var wire 1 / ic1 $end
$var wire 1 0 ic2 $end
$var wire 1 1 ic3 $end
$var wire 1 % need_regids $end
$var wire 1 $ need_valC $end
$var wire 1 2 t1 $end
$var wire 1 3 t2 $end
$var wire 1 4 t3 $end
$var wire 1 5 t4 $end
$var wire 1 6 t5 $end
$var wire 4 7 icode [3:0] $end
$upscope $end
$scope module uut2 $end
$var wire 8 8 Byte0 [7:0] $end
$var wire 4 9 ifun [3:0] $end
$var wire 4 : icode [3:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx :
bx 9
bx 8
bx 7
x6
x5
x4
x3
x2
x1
x0
x/
x.
bx -
bx ,
bx +
bx *
bx )
x(
bx '
bx &
x%
x$
bx #
bx "
bx !
$end
#1
b101 "
b101 ,
b1 #
b1 +
b1111111111111111111111111111111111111111111111111111111111110100 !
b1111111111111111111111111111111111111111111111111111111111110100 -
1$
1%
0(
15
06
04
11
00
1/
0.
13
12
b101 '
b101 7
b101 :
b0 &
b0 9
b101011111010011111111111111111111111111111111111111111111111111111111 *
b1010000 8
b1010000000101011111010011111111111111111111111111111111111111111111111111111111 )
#6
