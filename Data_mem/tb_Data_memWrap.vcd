$date
	Wed Mar  9 10:05:10 2022
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module tb_Data_memWrap $end
$var wire 64 ! valM [63:0] $end
$var wire 2 " stat [1:0] $end
$var reg 1 # clk $end
$var reg 4 $ icode [3:0] $end
$var reg 1 % imem_error $end
$var reg 1 & instr_valid $end
$var reg 1 ' rst $end
$var reg 64 ( valA [63:0] $end
$var reg 64 ) valE [63:0] $end
$var reg 64 * valP [63:0] $end
$scope module uut $end
$var wire 1 & Instr_valid $end
$var wire 1 # clk $end
$var wire 4 + icode [3:0] $end
$var wire 1 % imem_error $end
$var wire 1 ' rst $end
$var wire 64 , valA [63:0] $end
$var wire 64 - valE [63:0] $end
$var wire 64 . valP [63:0] $end
$var wire 64 / valM [63:0] $end
$var reg 1 0 dmem_err $end
$var reg 64 1 inAdd [63:0] $end
$var reg 64 2 inData [63:0] $end
$var reg 1 3 rEn $end
$var reg 2 4 stat [1:0] $end
$var reg 1 5 wEn $end
$scope module A $end
$var wire 1 # clk $end
$var wire 1 0 dmem_err $end
$var wire 64 6 inAdd [63:0] $end
$var wire 64 7 inData [63:0] $end
$var wire 1 3 rEn $end
$var wire 1 ' reset $end
$var wire 1 5 wEn $end
$var reg 64 8 outData [63:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx 8
bx 7
bx 6
x5
bx 4
x3
bx 2
bx 1
x0
bx /
bx .
bx -
bx ,
bx +
bx *
bx )
bx (
x'
x&
x%
bx $
0#
bx "
bx !
$end
#1
b0 !
b0 /
b0 8
00
b0 "
b0 4
b111010 1
b111010 6
b1100 2
b1100 7
15
03
1&
0%
b1010 *
b1010 .
b1100 (
b1100 ,
b111010 )
b111010 -
b100 $
b100 +
0'
#15
1#
#21
b1100 !
b1100 /
b1100 8
b0 2
b0 7
05
13
b1011 *
b1011 .
b101 $
b101 +
#30
0#
#45
1#
#60
0#
#61
b0 !
b0 /
b0 8
b1100 2
b1100 7
15
03
b100 $
b100 +
#75
1#
#90
0#
#101
b1100 !
b1100 /
b1100 8
b0 2
b0 7
05
13
b111010 (
b111010 ,
b1001 $
b1001 +
#105
1#
#120
0#
#135
1#
#141
