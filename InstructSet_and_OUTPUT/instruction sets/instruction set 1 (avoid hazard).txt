// First instruction
//irmovq 3 0 F 11 5  //irmovq 3 0 F rB V
inst_memory[0][7:4]<=4'd3;
inst_memory[0][3:0]<=4'd0;
inst_memory[1][7:4]<=4'd15;
inst_memory[1][3:0]<=4'd11;
inst_memory[2][7:4]<=4'd0;
inst_memory[2][3:0]<=4'd5;
inst_memory[3][7:4]<=4'd0;
inst_memory[3][3:0]<=4'd0;
inst_memory[4][7:4]<=4'd0;
inst_memory[4][3:0]<=4'd0;
inst_memory[5][7:4]<=4'd0;
inst_memory[5][3:0]<=4'd0;
inst_memory[6][7:4]<=4'd0;
inst_memory[6][3:0]<=4'd0;
inst_memory[7][7:4]<=4'd0;
inst_memory[7][3:0]<=4'd0;
inst_memory[8][7:4]<=4'd0;
inst_memory[8][3:0]<=4'd0;
inst_memory[9][7:4]<=4'd0;
inst_memory[9][3:0]<=4'd0;

// Second instruction
//irmovq 3 0 15 10 10 //irmovq 3 0 F rB V
inst_memory[10+0][7:4]<=4'd3;
inst_memory[10+0][3:0]<=4'd0;
inst_memory[10+1][7:4]<=4'd15;
inst_memory[10+1][3:0]<=4'd10;
inst_memory[10+2][7:4]<=4'd0;
inst_memory[10+2][3:0]<=4'd10;
inst_memory[10+3][7:4]<=4'd0;
inst_memory[10+3][3:0]<=4'd0;
inst_memory[10+4][7:4]<=4'd0;
inst_memory[10+4][3:0]<=4'd0;
inst_memory[10+5][7:4]<=4'd0;
inst_memory[10+5][3:0]<=4'd0;
inst_memory[10+6][7:4]<=4'd0;
inst_memory[10+6][3:0]<=4'd0;
inst_memory[10+7][7:4]<=4'd0;
inst_memory[10+7][3:0]<=4'd0;
inst_memory[10+8][7:4]<=4'd0;
inst_memory[10+8][3:0]<=4'd0;
inst_memory[10+9][7:4]<=4'd0;
inst_memory[10+9][3:0]<=4'd0;

//Third instruction
//opq  6 0 11 10 //opq 6 0 rA rB  0 meaning add
inst_memory[20+0][7:4]<=4'd6;
inst_memory[20+0][3:0]<=4'd0;
inst_memory[20+1][7:4]<=4'd11;
inst_memory[20+1][3:0]<=4'd10;

//Fourth instruction
//irmovq 3 0 15 6 5 //irmovq 3 0 F rB V
inst_memory[22+0][7:4]<=4'd3;
inst_memory[22+0][3:0]<=4'd0;
inst_memory[22+1][7:4]<=4'd15;
inst_memory[22+1][3:0]<=4'd6;
inst_memory[22+2][7:4]<=4'd0;
inst_memory[22+2][3:0]<=4'd5;
inst_memory[22+3][7:4]<=4'd0;
inst_memory[22+3][3:0]<=4'd0;
inst_memory[22+4][7:4]<=4'd0;
inst_memory[22+4][3:0]<=4'd0;
inst_memory[22+5][7:4]<=4'd0;
inst_memory[22+5][3:0]<=4'd0;
inst_memory[22+6][7:4]<=4'd0;
inst_memory[22+6][3:0]<=4'd0;
inst_memory[22+7][7:4]<=4'd0;
inst_memory[22+7][3:0]<=4'd0;
inst_memory[22+8][7:4]<=4'd0;
inst_memory[22+8][3:0]<=4'd0;
inst_memory[22+9][7:4]<=4'd0;
inst_memory[22+9][3:0]<=4'd0;

//Fifth instruction
//rmmovq 4 0 10 6 0 //rmmovq 4 0 rA rB D 
inst_memory[32+0][7:4]<=4'd4;
inst_memory[32+0][3:0]<=4'd0;
inst_memory[32+1][7:4]<=4'd10;
inst_memory[32+1][3:0]<=4'd6;
inst_memory[32+2][7:4]<=4'd0;
inst_memory[32+2][3:0]<=4'd0;
inst_memory[32+3][7:4]<=4'd0;
inst_memory[32+3][3:0]<=4'd0;
inst_memory[32+4][7:4]<=4'd0;
inst_memory[32+4][3:0]<=4'd0;
inst_memory[32+5][7:4]<=4'd0;
inst_memory[32+5][3:0]<=4'd0;
inst_memory[32+6][7:4]<=4'd0;
inst_memory[32+6][3:0]<=4'd0;
inst_memory[32+7][7:4]<=4'd0;
inst_memory[32+7][3:0]<=4'd0;
inst_memory[32+8][7:4]<=4'd0;
inst_memory[32+8][3:0]<=4'd0;
inst_memory[32+9][7:4]<=4'd0;
inst_memory[32+9][3:0]<=4'd0;

//Sixth instruction
//mrmovq 5 0 8 6 0 //mrmovq 5 0 rA rB D 
inst_memory[42+0][7:4]<=4'd5;
inst_memory[42+0][3:0]<=4'd0;
inst_memory[42+1][7:4]<=4'd8;
inst_memory[42+1][3:0]<=4'd6;
inst_memory[42+2][7:4]<=4'd0;
inst_memory[42+2][3:0]<=4'd0;
inst_memory[42+3][7:4]<=4'd0;
inst_memory[42+3][3:0]<=4'd0;
inst_memory[42+4][7:4]<=4'd0;
inst_memory[42+4][3:0]<=4'd0;
inst_memory[42+5][7:4]<=4'd0;
inst_memory[42+5][3:0]<=4'd0;
inst_memory[42+6][7:4]<=4'd0;
inst_memory[42+6][3:0]<=4'd0;
inst_memory[42+7][7:4]<=4'd0;
inst_memory[42+7][3:0]<=4'd0;
inst_memory[42+8][7:4]<=4'd0;
inst_memory[42+8][3:0]<=4'd0;
inst_memory[42+9][7:4]<=4'd0;
inst_memory[42+9][3:0]<=4'd0;

//Seventh instruction
//opq  6 0 8 10 //opq 6 0 rA rB  0 meaning add
inst_memory[52+0][7:4]<=4'd6;
inst_memory[52+0][3:0]<=4'd0;
inst_memory[52+1][7:4]<=4'd8;
inst_memory[52+1][3:0]<=4'd10;

//Eighth instruction
//halt 0 0
inst_memory[54+0][7:4]<=4'd0;
inst_memory[54+0][3:0]<=4'd0;